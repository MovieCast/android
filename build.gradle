/*
 * Copyright (c) MovieCast and it's contributors. All rights reserved.
 * Licensed under the MIT License. See LICENSE in the project root for license information.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.2'
        classpath 'org.moallemi.gradle.advanced-build-version:gradle-plugin:1.6.0'
        

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }

}

apply plugin: 'org.moallemi.advanced-build-version'
advancedVersioning {
    codeOptions {
        versionCodeType org.moallemi.gradle.internal.VersionCodeType.DATE
    }
    nameOptions {
        versionMajor 0
        versionMinor 1
        versionPatch 0
    }
}

ext {
    targetSdk = 27
    compileSdk = 27
    minSdk = 15

    appCompatVersion = "27.1.1"
    butterKnifeVersion = "8.8.1"
    okHttpVersion = "3.10.0"
    daggerVersion = "2.15"
    picassoVersion = "2.71828"
    jacksonVersion = "2.7.2"
    javaxAnnotationVersion = "1.2"

    jlibtorrentVersion = '1.2.0.18-RC5'

    versionName = advancedVersioning.versionName
    versionCode = (System.getenv("BUILD_NUMBER") ?: advancedVersioning.versionCode) as int
}

allprojects {
    repositories {
        google()
        jcenter()
    }

    project.afterEvaluate {
        if(project.plugins.hasPlugin('com.android.application')) {
            project.android {
                packagingOptions {
                    exclude 'META-INF/DEPENDENCIES'
                    exclude 'META-INF/LICENSE'
                    exclude 'META-INF/LICENSE.txt'
                    exclude 'META-INF/license.txt'
                    exclude 'META-INF/NOTICE'
                    exclude 'META-INF/NOTICE.txt'
                    exclude 'META-INF/notice.txt'
                    exclude 'META-INF/ASL2.0'
                }

                applicationVariants.all { variant ->
                    variant.outputs.all {
                        if(variant.name == "debug")
                            outputFileName = "${project.name}-development-${variant.versionCode}.apk"
                        else
                        outputFileName = "${project.name}-${variant.name}-${variant.versionName}.apk"
                    }
                }
            }
        }
    }
}